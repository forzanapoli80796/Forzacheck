# Generated by Django 4.2.13 on 2024-10-02 14:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApartmentCleaning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], default='JP23', max_length=50)),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Apartment Cleaning(Wednesday)',
                'verbose_name_plural': 'Apartment Cleaning(Wednesday)',
            },
        ),
        migrations.CreateModel(
            name='BestBeforeDateCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('cured_meats_checked', models.BooleanField(default=False)),
                ('cheese_checked', models.BooleanField(default=False)),
                ('vegan_cheese_checked', models.BooleanField(default=False)),
                ('latest_best_before_date', models.DateField()),
                ('expired', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CalendarWeekNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_week', models.IntegerField(unique=True)),
                ('notification_sent', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CleanlinessOrderApartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_week', models.PositiveIntegerField(blank=True, null=True)),
                ('floor', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('shelf', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('garbage', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('cold_room', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('washroom_kitchen', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('wc', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('measures', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], max_length=4, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CleanlinessOrderKitchen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_week', models.PositiveIntegerField(blank=True, null=True)),
                ('tiles', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('tables_downstairs', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('refrigerators_back', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('bottom_sink', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('extractor_hood', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('refrigerator', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('kav', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('measures', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], max_length=4, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CleanlinessOrderStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_week', models.PositiveIntegerField(blank=True, null=True)),
                ('floor', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('garbage', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('tidiness', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('inventory', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('measures', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], max_length=4, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CleanlinessOrderTerminal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_week', models.PositiveIntegerField(blank=True, null=True)),
                ('floor', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('tiles', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('refrigerator', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('counter', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('lamps', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('tables_chairs', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('windows', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor')], max_length=10)),
                ('measures', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], max_length=4, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DoughroomCleaning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('comments', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Dough Room Cleaning',
                'verbose_name_plural': 'Dough Room Cleanings',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='DryStorageCleaning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], default='JP23', max_length=50)),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Dry Storage Cleaning(Wednesday)',
                'verbose_name_plural': 'Dry Storage Cleaning(Wednesday)',
            },
        ),
        migrations.CreateModel(
            name='KitchenInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('location', models.CharField(choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], default='JP23', max_length=50)),
                ('name', models.CharField(max_length=100)),
                ('comments', models.TextField(blank=True, null=True)),
                ('einwegpapier_zickzack', models.PositiveIntegerField(default=0, verbose_name='Einwegpapier ZickZack (Einheit 100 St.)')),
                ('einweghandschuhe_m', models.PositiveIntegerField(default=0, verbose_name='Einweghandschuhe M (Einheit)')),
                ('einweghandschuhe_l', models.PositiveIntegerField(default=0, verbose_name='Einweghandschuhe L (Einheit)')),
                ('blaue_rolle_papierwischtuch', models.PositiveIntegerField(default=0, verbose_name='Blaue Rolle Papierwischtuch (Stück)')),
                ('fettloeser_packzu', models.PositiveIntegerField(default=0, verbose_name='Fettlöser PackZu (Stück)')),
                ('spuelmittel_packzu', models.PositiveIntegerField(default=0, verbose_name='Spülmittel PackZu (Stück)')),
                ('handseife', models.PositiveIntegerField(default=0, verbose_name='Handseife (Stück)')),
                ('toilettenpapier', models.PositiveIntegerField(default=0, verbose_name='Toilettenpapier (Stück)')),
                ('waschpulver', models.PositiveIntegerField(default=0, verbose_name='Waschpulver (Stück)')),
                ('reiniger_spuelmaschine', models.PositiveIntegerField(default=0, verbose_name='Reiniger Spülmaschine (Stück)')),
                ('muellsack_gross', models.PositiveIntegerField(default=0, verbose_name='Müllsack groß (Stück)')),
                ('muellsack_klein', models.PositiveIntegerField(default=0, verbose_name='Müllsack klein (Stück)')),
                ('bodenreiniger', models.PositiveIntegerField(default=0, verbose_name='Bodenreiniger (Stück)')),
            ],
            options={
                'verbose_name': 'Kitchen Inventory(Non-Food)',
                'verbose_name_plural': 'Kitchen Inventory(Non-Food)',
            },
        ),
        migrations.CreateModel(
            name='KitchenLate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], default='JP23', max_length=50)),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('comments', models.TextField(blank=True, null=True)),
                ('pizza_grade', models.IntegerField()),
                ('tomorrow_balls_total', models.IntegerField()),
                ('old_balls_total', models.IntegerField(verbose_name='How many of these are new')),
                ('old_balls_trash', models.IntegerField(blank=True, null=True, verbose_name='How many old balls went in the trash')),
                ('balls_broken_today', models.IntegerField()),
                ('pizzas_broken_today', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Kitchen Department Late Shift(Quantity)',
                'verbose_name_plural': 'Kitchen Department Late Shift(Quantity)',
            },
        ),
        migrations.CreateModel(
            name='KitchenLateTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], default='JP23', max_length=50)),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('side', models.CharField(choices=[('left', 'Left'), ('right', 'Right')], default=False, max_length=10)),
                ('comments', models.TextField(blank=True, null=True)),
                ('soap_WC_sufficient', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], max_length=3, null=True)),
                ('toilet_paper_WC_sufficient', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], max_length=3, null=True)),
                ('grease_remover_kitchen_sufficient', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], max_length=3, null=True)),
                ('washingup_liquid_kitchen_sufficient', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], max_length=3, null=True)),
                ('blue_roll_kitchen_sufficient', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], max_length=3, null=True)),
            ],
            options={
                'verbose_name': 'Kitchen Department Late Shift(Task)',
                'verbose_name_plural': 'Kitchen Department Late Shift(Task)',
            },
        ),
        migrations.CreateModel(
            name='KitchenLunch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], default='JP23', max_length=50)),
                ('comments', models.TextField(blank=True, null=True)),
                ('today_balls_total', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Kitchen Department Lunch Shift(Quantity)',
                'verbose_name_plural': 'Kitchen Department Lunch Shift(Quantity)',
            },
        ),
        migrations.CreateModel(
            name='KitchenLunchTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], default='JP23', max_length=50)),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('task_kitchen_cleaned', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], max_length=3, null=True, verbose_name='Kitchen cleaned according to instructions')),
                ('task_enough_laundry', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], max_length=3, null=True, verbose_name='Was there enough laundry')),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Kitchen Department Lunch Shift(Task)',
                'verbose_name_plural': 'Kitchen Department Lunch Shift(Task)',
            },
        ),
        migrations.CreateModel(
            name='KitchenSpecialcleaningMonday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], default='JP23', max_length=50)),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Kitchen Department Specialcleaning(Monday)',
                'verbose_name_plural': 'Kitchen Department Specialcleaning(Monday)',
            },
        ),
        migrations.CreateModel(
            name='ReviewChecklistsApartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_week', models.PositiveIntegerField(blank=True, null=True)),
                ('fulfillment_rate', models.CharField(choices=[('75%', '75%'), ('85%', '85%'), ('90%', '90%'), ('95%', '95%'), ('100%', '100%')], max_length=4)),
                ('measures', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], max_length=4, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewChecklistsKitchen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_week', models.PositiveIntegerField(blank=True, null=True)),
                ('fulfillment_rate', models.CharField(choices=[('75%', '75%'), ('85%', '85%'), ('90%', '90%'), ('95%', '95%'), ('100%', '100%')], max_length=4)),
                ('measures', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], max_length=4, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewChecklistsStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_week', models.PositiveIntegerField(blank=True, null=True)),
                ('fulfillment_rate', models.CharField(choices=[('75%', '75%'), ('85%', '85%'), ('90%', '90%'), ('95%', '95%'), ('100%', '100%')], max_length=4)),
                ('measures', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], max_length=4, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewChecklistsTerminal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_week', models.PositiveIntegerField(blank=True, null=True)),
                ('fulfillment_rate', models.CharField(choices=[('75%', '75%'), ('85%', '85%'), ('90%', '90%'), ('95%', '95%'), ('100%', '100%')], max_length=4)),
                ('measures', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], max_length=4, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TerminalInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Datum')),
                ('location', models.CharField(choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], max_length=10, verbose_name='Standort')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('comments', models.TextField(blank=True, null=True)),
                ('pizzakarton', models.PositiveIntegerField(default=0, verbose_name='Pizzakarton (Einheit 100 St.)')),
                ('pizzapapier', models.PositiveIntegerField(default=0, verbose_name='Pizzapapier (Einheit 1000 St.)')),
                ('salatschale', models.PositiveIntegerField(default=0, verbose_name='Salatschale (Einheit 50 St.)')),
                ('salatschale_deckel', models.PositiveIntegerField(default=0, verbose_name='Salatschale Deckel (Einheit 50 St.)')),
                ('dressingschale', models.PositiveIntegerField(default=0, verbose_name='Dressingschale (Einheit 100 St.)')),
                ('dressingschale_deckel', models.PositiveIntegerField(default=0, verbose_name='Dressingschale Deckel (Einheit 100 St.)')),
                ('serviette_gast', models.PositiveIntegerField(default=0, verbose_name='Serviette Gast (Einheit 100 St.)')),
                ('dip_becher', models.PositiveIntegerField(default=0, verbose_name='Dip Becher (Einheit)')),
                ('dip_deckel', models.PositiveIntegerField(default=0, verbose_name='Dip Deckel (Einheit)')),
                ('bonrollen', models.PositiveIntegerField(default=0, verbose_name='Bonrollen (Stück)')),
                ('kugelschreiber', models.PositiveIntegerField(default=0, verbose_name='Kugelschreiber (Stück)')),
                ('textmarker_gelb', models.PositiveIntegerField(default=0, verbose_name='Textmarker gelb (Stück)')),
                ('filzstift_schwarz', models.PositiveIntegerField(default=0, verbose_name='Filzstift schwarz (Stück)')),
                ('kellnerblock', models.PositiveIntegerField(default=0, verbose_name='Kellnerblock (Stück)')),
                ('tesa_rollen', models.PositiveIntegerField(default=0, verbose_name='Tesa Rollen (Stück)')),
                ('etiketten_tiramisu', models.PositiveIntegerField(default=0, verbose_name='Etiketten Warenauszeichner (Stück)')),
                ('etiketten_gn', models.PositiveIntegerField(default=0, verbose_name='Etiketten Datum GN (Stück)')),
                ('aufkleber_rot', models.PositiveIntegerField(default=0, verbose_name='Aufkleber rot MHD (Stück)')),
                ('einwegloeffel', models.PositiveIntegerField(default=0, verbose_name='Einweglöffel (Stück)')),
                ('einweggabel', models.PositiveIntegerField(default=0, verbose_name='Einweggabel (Stück)')),
                ('desinfektionsmittel', models.PositiveIntegerField(default=0, verbose_name='Desinfektionsmittel (Einheit)')),
                ('salz_spuelmaschine', models.PositiveIntegerField(default=0, verbose_name='Salz Spülmaschine (Einheit)')),
                ('speisekarte_blau', models.PositiveIntegerField(default=0, verbose_name='Speisekarte blau (Einheit)')),
                ('menu_gelb', models.PositiveIntegerField(default=0, verbose_name='Menú gelb (Einheit)')),
            ],
            options={
                'verbose_name': 'Terminal Inventory(Non-Food)',
                'verbose_name_plural': 'Terminal Inventory(Non-Food)',
            },
        ),
        migrations.CreateModel(
            name='TerminalLate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], default='JP23', max_length=50)),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Terminal Department Late Shift',
                'verbose_name_plural': 'Terminal Department Late Shift',
            },
        ),
        migrations.CreateModel(
            name='TerminalLunch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], default='JP23', max_length=50)),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('boden_gastraum_cleaned', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], max_length=3, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Terminal Department Lunch Shift',
                'verbose_name_plural': 'Terminal Department Lunch Shift',
            },
        ),
        migrations.CreateModel(
            name='TerminalSaturdayCleaning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('location', models.CharField(max_length=50)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WednesdayCleaning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('JP23', 'JP23'), ('KP5', 'KP5'), ('TS17', 'TS17')], default='JP23', max_length=50)),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Kitchen Special Cleaning(Wednesday)',
                'verbose_name_plural': 'Kitchen Special Cleaning(Wednesday)',
            },
        ),
        migrations.CreateModel(
            name='Comparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('dough_amount', models.IntegerField()),
                ('old_balls_total', models.IntegerField()),
                ('comparison_value', models.IntegerField(default=0)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pizza_ordering.store')),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyDoughAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dough_amount', models.IntegerField()),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=9, null=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_dough_amounts', to='pizza_ordering.store')),
            ],
            options={
                'unique_together': {('store', 'day')},
            },
        ),
    ]
